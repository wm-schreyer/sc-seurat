library(Seurat)
library(ggplot2)

# create object for Infected population count matrix
pos.only.data <- Read10X(data.dir = "pos_tsv")
pos.only.object <- CreateSeuratObject(counts = pos.data, project = "Pos")
pos.only.object

# calculate percentage of total transcripts from mt-genes
pos.only.object[["percent.mt"]] <- PercentageFeatureSet(pos.only.object, pattern = "^MT-")

# calculate percentage of total transcripts from rp-genes
pos.only.object[["percent.rp"]] <- PercentageFeatureSet(pos.only.object, pattern = "^RP")

# visualize aggr.object QC metrics as a violin plot
VlnPlot(pos.only.object, features = c("nFeature_RNA", "nCount_RNA", "percent.mt", "percent.rp"), ncol = 4, pt.size = 0.5)

# Filter out low quality reads **SCT Assay** - nGene filter sets min for unique features and UMI counts
pos.sct <- subset(x = pos.only.object, 
                   subset = (nFeature_RNA >= 200) &
                     (nFeature_RNA <= 8000) & 
                     (nCount_RNA >= 1000) &
                     (percent.mt < 30))

# check population cell numbers
table(pos.sct$orig.ident)

# visualize aggr.filt QC metrics as a violin plot
VlnPlot(pos.sct, features = c("nFeature_RNA", "nCount_RNA", "percent.mt", "percent.rp"), ncol = 4, pt.size = 0.5)

# run sctransform for Clustering, use default variable features limit (3,000), regress out percent.mt, nGene **SCT Assay**
pos.sct <- SCTransform(pos.sct, vars.to.regress = c("percent.mt"), verbose = FALSE)

# run PCA and plot
pos.sct <- RunPCA(pos.sct, verbose = FALSE, assay = "SCT")
DimPlot(pos.sct, reduction = 'pca')

# cluster cells
pos.sct <- FindNeighbors(pos.sct, dims = 1:40, verbose = FALSE, assay = "SCT")
pos.sct <- FindClusters(pos.sct, verbose = FALSE)

# run umap with 40 dims and plot
pos.sct <- RunUMAP(pos.sct, dims = 1:40, verbose = FALSE, assay = "SCT")

# plot umap by clusters
DimPlot(object = pos.sct, reduction = 'umap')
