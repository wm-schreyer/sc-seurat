#OUTDATED

## normalize aggr.filt data
aggr.filt <- NormalizeData(aggr.filt)

## identify top 2000 variable features
top2k <- FindVariableFeatures(aggr.filt, selection.method = "vst", nfeatures = 2000)

## label phage polarization features
polar_features <- c("IL10", "CD80", "IDO1", "TNF", "TGM2", "IL1B", "VEGFA", "JUN", "SOCS1", "HIF1A", "NFKB1", "STAT1", "GLUL", "CXCL10", "TGFB1", "PKM", "IL1RN")

## visualize variable features
plot5 <- VariableFeaturePlot(aggr.filt)
plot5

## scale data in prep for PCA
top2k <- rownames(aggr.filt)
aggr.filt <- ScaleData(aggr.filt, features = top2k)

## run PCA, features = ALL GENES > use tighter filter for genes when plotting PCA?
aggr.filt <- RunPCA(object = aggr.filt, features = top2k)

## visualize PCA
DimPlot(aggr.filt, reduction = "pca")

## PCA heatmap plotting in 2 dim
DimHeatmap(aggr.filt, dims = 1:2, balanced = TRUE)

## determine dimensionality with elbowplot
ElbowPlot(object = aggr.filt, ndims = 40)

## determine dimensionality of dataset w/ JackStraw Plot
aggr.filt <- JackStraw(aggr.filt, num.replicate = 100, prop.freq = 0.05)
aggr.filt <- ScoreJackStraw(aggr.filt, dims = 1:20)
JackStrawPlot(aggr.filt, dims = 1:20)

## cluster the cells
aggr.filt <- FindNeighbors(aggr.filt, dims = 1:8)
aggr.filt <- FindClusters(aggr.filt, resolution = 0.5)

## run umap plot
aggr.filt <- RunUMAP(aggr.filt, dims = 1:8)
DimPlot(aggr.filt, reduction = "umap")

## run umap plot grouped by pop
DimPlot(aggr.filt, reduction = 'umap', group.by = 'orig.ident')
